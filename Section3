Lecture 1:
User registration and user profiles
--we will need to build a view to allow visitors to create a user account.

---we include only the username, first_name, and email fields of the model. These
fields will be validated based on their corresponding model fields

For example, if the user chooses a username that already exists,
they will get a validation error because username is a field defined with
unique=True.

--You can provide a clean_<fieldname>() method to any of your
form fields in order to clean the value or raise form validation
errors for a specific field
--Forms also include a general clean()
method to validate the entire form, which is useful to validate fields
that depend on each other.

--open up http://127.0.0.1:8000/account/register/ to checkout the register
then register and click create account



--Click on the log in link and enter your username and password to
verify that you can access your account.

Lecture 2:
Extending the user model::
--Django authentication framework user model comes with very basic
fields. You may wish to extend the user model to include additional
data.
---we can do this by creating a profile model that
contains all additional fields and a one-to-one relationship with the
Django user model.

Open the shell and run the following command to create the
database migration for the new model
--python manage.py makemigrations
--python manage.py migrate

--Edit the admin.py file of the account application and register the Profile
model
--run the admin url, you will see profile model in the admin site

--Now, we will let users edit their profile on the website. Add the
following import and model forms to the forms.py file of the account
application:

--create a template/account/edit.html page

--Register a new user and open http://127.0.0.1:8000/account/edit/.
