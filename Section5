Sharing Content in Your Website
--you will learn how to create a JavaScript
bookmarklet to share content from other sites into your website,
and you will implement AJAX features into your project using
jQuery and Django.

--Creating many-to-many relationships
***Customizing behavior for forms
***Using jQuery with Django
***Building a jQuery bookmarklet
***Generating image thumbnails using sorl-thumbnail
***Implementing AJAX views and integrating them with
jQuery
***Creating custom decorators for views
***Building AJAX pagination

Lecture 1:
Creating an image bookmarking website
1. Define a model to store images and their information
2. Create a form and a view to handle image uploads
3. Build a system for users to be able to post images they find
on external websites

--create a new app called images

--django-admin startapp images
--we then build the image model

NB:
Database indexes improve query performance. Consider setting db_index=True
for fields that you frequently query using filter(), exclude(), or order_by().
ForeignKey fields or fields with unique=True imply the creation of an index. You can
also use Meta.index_together to create indexes for multiple fields.

Lecture 2: 
Creating many-to-many relationships:
--run the migrations for images
--to apply migrations --python manage.py migrate images

Lecture 3:
Registering the image model in the administration site
edit the admin.py file and register image

-start the developement server

Lecture 3:
Cleaning form fields
--to check if the image url is valid we will
check that the filename ends with a .jpg or .jpeg extension to only
allow JPEG files.

Lecture 4:
Overriding the save() method of a ModelForm
--As you know, ModelForm provides a save() method to save the current
model instance to the database and return the object
--We will override the save() method of our form in
order to retrieve the given image and save it.

--we edit the views file for images app

--create a new urls.py file

--crete a template file

checkout

***python manage.py runserver_plus --cert-file cert.crt***

NB: this works with firefox and for chrome, remove the cookies for this to work
https://127.0.0.1:8000/images/create/?title=%20Django%20and%20
Duke&url=https://upload.wikimedia.org/wikipedia/commons/8/85/Django_
Reinhardt_and_Duke_Ellington_%28Gottlieb%29.jpg

--add description o

Lecture 4:
Building a bookmarklet with jQuery
--A bookmarklet is a bookmark stored in a web browser that contains
JavaScript code to extend the browser's functionality
--this is important for building tools tht interact with other websites

--Some online services, such as Pinterest, implement their own
bookmarklets to let users share content from other sites onto their
platform.

--This is how your users will add a bookmarklet to their browser and
use it:
1. The user drags a link from your site to his browser's
bookmarks. The link contains JavaScript code in its href
attribute. This code will be stored in the bookmark.
2. The user navigates to any website and clicks on the
bookmark. The JavaScript code of the bookmark is
executed

--create a new template called bookmarklet_launcher.js

--add bookmarlet launcher to the dashboard pages so tht our users can copy it to their bookmarks

--checkout http://127.0.0.1:8000/account/

<!-- this displays the total number of images bookmarked by the user. -->
<!-- We use the {% with %} template tag to set a variable with the total number of images bookmarked by the
current user. -->

--create the following directories and files inside the images
application directory:


--we can also use Ngrok for https